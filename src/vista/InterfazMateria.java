/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import Controlador.ControlMateria;
import Modelo.EntidadMateria;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julve
 */
public class InterfazMateria extends javax.swing.JInternalFrame {

    /**
     * Creates new form CaMaterias
     */
    EntidadMateria modelMateria = new EntidadMateria();
    ControlMateria controlMateria = new ControlMateria();
    String horas = "";
    int materia = 0;
    String imagen = "";

    DefaultTableModel modelo1;

    public InterfazMateria() {
        this.setLocation(380, 20);
        this.setTitle("Control de Materia");

        initComponents();
        mostrar("");
        inhabilitar();
    }

    void inhabilitar() {

        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnRegistrar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnSalir.setEnabled(true);

        txtClaveMateria.setEnabled(true);
        txtNombreMateria.setEnabled(true);
        cbxSemestreMateria.setEnabled(true);
        txtHorasSemana.setEnabled(true);
        txtClaveMateria.setText("");
        txtNombreMateria.setText("");
        txtHorasSemana.setText("");
        cbxSemestreMateria.setSelectedIndex(0);
        btnRegistrar.setText("Registrar");

    }

    void habilitar() {

        txtClaveMateria.setEnabled(true);
        txtNombreMateria.setEnabled(true);
        txtHorasSemana.setEnabled(true);
        btnRegistrar.setEnabled(false);
        cbxSemestreMateria.setEnabled(true);

    }

    void habilitarModificar() {

        txtNombreMateria.setEnabled(true);
        txtHorasSemana.setEnabled(true);
        cbxSemestreMateria.setEnabled(true);
        btnRegistrar.setText("Guardar Cambios");
        btnRegistrar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);

    }

    void inhabilitarSeleccion() {
        txtClaveMateria.setEnabled(false);
        txtNombreMateria.setEnabled(false);
        cbxSemestreMateria.setEnabled(false);
        txtHorasSemana.setEnabled(false);

    }

    void habilitarSeleccion() {
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);

    }

    void mostrar(String buscar) {
        try {

            modelo1 = controlMateria.ConsultarMateria(buscar);
            tbMateria.setModel(modelo1);

        } catch (SQLException ex) {
            Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JpDetalleMateria = new javax.swing.JPanel();
        lbClaveMateria = new javax.swing.JLabel();
        lbNombreMateria = new javax.swing.JLabel();
        lbSemestreMateria = new javax.swing.JLabel();
        txtClaveMateria = new javax.swing.JTextField();
        txtNombreMateria = new javax.swing.JTextField();
        cbxSemestreMateria = new javax.swing.JComboBox<>();
        lbHorasSemana = new javax.swing.JLabel();
        txtHorasSemana = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnRegistrar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lbBuscarNombreMateria = new javax.swing.JLabel();
        txtBuscaMateria = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMateria = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);

        JpDetalleMateria.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Detalles de Materias", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        JpDetalleMateria.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        lbClaveMateria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbClaveMateria.setText("Clave de la Materia:");

        lbNombreMateria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbNombreMateria.setText("Nombre de la Materia:");

        lbSemestreMateria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbSemestreMateria.setText("Semestre de la materia:");

        txtClaveMateria.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        txtClaveMateria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClaveMateriaKeyTyped(evt);
            }
        });

        txtNombreMateria.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N

        cbxSemestreMateria.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        cbxSemestreMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "1", "2", "3", "4", "5", "6" }));

        lbHorasSemana.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbHorasSemana.setText("Cantidad Horas Semanal:");

        txtHorasSemana.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        txtHorasSemana.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtHorasSemana.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHorasSemanaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout JpDetalleMateriaLayout = new javax.swing.GroupLayout(JpDetalleMateria);
        JpDetalleMateria.setLayout(JpDetalleMateriaLayout);
        JpDetalleMateriaLayout.setHorizontalGroup(
            JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpDetalleMateriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbClaveMateria)
                    .addGroup(JpDetalleMateriaLayout.createSequentialGroup()
                        .addComponent(lbHorasSemana)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHorasSemana, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JpDetalleMateriaLayout.createSequentialGroup()
                        .addGroup(JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSemestreMateria)
                            .addComponent(lbNombreMateria))
                        .addGap(18, 18, 18)
                        .addGroup(JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtClaveMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxSemestreMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        JpDetalleMateriaLayout.setVerticalGroup(
            JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpDetalleMateriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbClaveMateria)
                    .addComponent(txtClaveMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombreMateria)
                    .addComponent(txtNombreMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSemestreMateria)
                    .addComponent(cbxSemestreMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JpDetalleMateriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbHorasSemana)
                    .addComponent(txtHorasSemana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnRegistrar.setBackground(new java.awt.Color(102, 102, 102));
        btnRegistrar.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/aceptar-o-no-la-correcta-seleccione-aceptar-verde-si-icono-9162-32.png"))); // NOI18N
        btnRegistrar.setText("Registar");
        btnRegistrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistrar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnRegistrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseClicked(evt);
            }
        });
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(102, 102, 102));
        btnModificar.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/signatura-icono-8756-32.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(102, 102, 102));
        btnEliminar.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cuadrados-eliminar-icono-7310-32.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(102, 102, 102));
        btnSalir.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(102, 102, 102));
        btnCancelar.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar-cancelar-icono-4935-32.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModificar)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addGap(18, 18, 18)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbBuscarNombreMateria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbBuscarNombreMateria.setText("Nombre de la Materia:");

        txtBuscaMateria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtBuscaMateria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscaMateriaKeyTyped(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa-icono-3813-32.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });

        tbMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Clave Materia", "Nombre Materia", "Semestre", "Horas semana"
            }
        ));
        tbMateria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMateriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMateria);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbBuscarNombreMateria)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscaMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBuscarNombreMateria)
                    .addComponent(txtBuscaMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JpDetalleMateria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JpDetalleMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:

        this.setVisible(false);
    }//GEN-LAST:event_btnSalirActionPerformed
//  PBI4: HU10 Como subdirector quiero poder dar de alta las materias
    private void btnRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseClicked

        String boton = btnRegistrar.getText();
        String Clave = txtClaveMateria.getText();
        String Nombre = txtNombreMateria.getText();
        String Horas = txtHorasSemana.getText();
        int seleccionado = cbxSemestreMateria.getSelectedIndex();

        if (boton.equalsIgnoreCase("Registrar")) {
//            VALIDA CAMPOS VACÍO
            if (Clave.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Ingrese la Clave de la Materia");
            }
            //     VALIDA CAMPOS VACÍO
            if (Nombre.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Ingrese nombre de la materia ");
            }
//          VALIDA CAMPOS VACÍO
            if (seleccionado == 0) {
                JOptionPane.showMessageDialog(null, " Seleccione el Semestre ");
            }
            //     VALIDA CAMPOS VACÍO
            if (Horas.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, " Ingrese las horas ");
            } else {

                int claveMateria = Integer.parseInt(Clave);
                int HorasMateria = Integer.parseInt(Horas);
//ASIGNA  VALORES  A ENTIDAD
                modelMateria.setClave(claveMateria);
                modelMateria.setNombreMateria(Nombre);
                modelMateria.setSemestreMateria(seleccionado);
                modelMateria.setCantidadHoras(HorasMateria);
//                MÉTODO  QUE REGISTRA LOS  DATOS DE LA MATERIA
                controlMateria.RegistrarMateria(modelMateria);

                btnRegistrar.setText("Nuevo");
//                MUESTRA  LOS  DATOS EN LA TABLA
                mostrar("");
//                HABILITA BOTONES
                inhabilitar();
            }

        }
//PBI4: HU11 Como subdirector quiero poder modificar a las materias registradas
        if (boton.equalsIgnoreCase("Guardar cambios")) {

            //            VALIDA CAMPOS VACÍO
            if (Clave.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Ingrese la Clave de la Materia");
            }
            //     VALIDA CAMPOS VACÍO
            if (Nombre.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Ingrese nombre de la materia ");
            }
//          VALIDA CAMPOS VACÍO
            if (seleccionado == 0) {
                JOptionPane.showMessageDialog(null, " Seleccione el Semestre ");
            }
            //     VALIDA CAMPOS VACÍO
            if (Horas.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, " Ingrese las horas ");
            } else {
                try {
                    //VARIABLE  QUE  GUARDA UN MATERIA SI  ESTE  SE  ENCUENTRA EN LA TABLA HORARIO
                    int materiaEncontrada = 0;

                    int claveMateria = Integer.parseInt(Clave);
                    //MÉTODO   QUE  VALIDA  SI  UNA MATERIA TIENE  UN  HORARIO  REGISTRADO
                    materiaEncontrada = controlMateria.consultarMateriaTieneHorario(claveMateria);

//                System.out.println("materiaEncontrada" + materiaEncontrada);
                    if (materiaEncontrada == claveMateria) {
                        JOptionPane.showMessageDialog(rootPane, "MATERIA CON CLAVE NUMERO " + materiaEncontrada + " NO SE PUEDE MODIFICAR, TIENE UN HORARIO ASIGNADO", "ERROR", JOptionPane.ERROR_MESSAGE);
                        inhabilitar();
                    } else {
//            int claveMateria = Integer.parseInt(Clave);
                        int HorasMateria = Integer.parseInt(Horas);
                        modelMateria.setClave(claveMateria);
                        modelMateria.setNombreMateria(Nombre);
                        modelMateria.setSemestreMateria(seleccionado);
                        modelMateria.setCantidadHoras(HorasMateria);
//MÉTODO QUE MODIFICA UNA MATERIA EXISTENTE
                        controlMateria.modificarMateria(modelMateria, materia);
                        materia = 0;
                        mostrar("");
                        inhabilitar();

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(InterfazMateria.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnRegistrarMouseClicked

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        // TODO add your handling code here:
        habilitarModificar();
    }//GEN-LAST:event_btnModificarMouseClicked
//PBI4: HU12 Como subdirector quiero poder dar de baja a las materias registradas
    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        // TODO add your handling code here:
//        String clave = txtClaveMateria.getText();
//
//        int confirmacion = JOptionPane.showConfirmDialog(null, "Seguro deseas eliminar", "Inane warning", JOptionPane.YES_NO_OPTION);
//
//        if (confirmacion == 0) {
//            int materiaEncontrada = 0;
//            int claveEliminar = Integer.parseInt(clave);
//            try {
//                //MÉTODO   QUE  VALIDA  SI  UNA MATERIA TIENE   UN  HORARIO  REGISTRADO
//                materiaEncontrada = controlMateria.consultarMateriaTieneHorario(claveEliminar);
//                inhabilitar();
//            } catch (SQLException ex) {
//                Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
//            }
//
//            if (materiaEncontrada == claveEliminar) {
//                JOptionPane.showMessageDialog(rootPane, "LA MATERIA CON CLAVE  " + claveEliminar + " NO SE PUEDE ELIMINAR, TIENE UN HORARIO ASIGNADO", "ERROR", JOptionPane.ERROR_MESSAGE);
//                inhabilitar();
//            } else {
//
//                modelMateria.setClave(claveEliminar);
//                //MÉTODO QUE ELIMINA UNA MATERIA EXISTENTE
//                controlMateria.eliminarMateria(modelMateria);
//                mostrar("");
//                inhabilitar();
//            }
//        }

    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        // TODO add your handling code here:
        inhabilitar();

    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        // TODO add your handling code here:
        String cla;
        String nomma;
        String sma;
        String canth;
        String mensaj[] = null;
        String seleccionHoras = "";
        try {
            String buscar = txtBuscaMateria.getText();
            //VALIDA CAMPO VACÍO
            if (buscar.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Campo vacio ingrese materia a Buscar", "Inane warning", JOptionPane.WARNING_MESSAGE);

            } else {
                //MUESTRA DATOS EN LA TABLA
                mostrar(buscar);
                String mensaje = "";
                //03:MÉTODO QUE  CONSULTA UNA  MATERIA ESPECÍFICA
                mensaje = controlMateria.consultarMateriaEspecifico(buscar);
                if (mensaje.equalsIgnoreCase("")) {

                    JOptionPane.showMessageDialog(null, "La Materia no se encuentra registrado", "Inane warning", JOptionPane.WARNING_MESSAGE);
                    txtBuscaMateria.setText("");
                    mostrar("");
                    inhabilitarSeleccion();
                    
                } else {
                    //SE PARTE LO QUE  SE RECIBE  PARA ENVIARLOS A CAJAS DE TEXTO
                    mensaj = mensaje.split("-");
                    cla = mensaj[0].trim();
                    nomma = mensaj[1].trim();
                    sma = mensaj[2].trim();
                    canth = mensaj[3].trim();

                    txtClaveMateria.setText(cla);
                    txtNombreMateria.setText(nomma);
                    txtHorasSemana.setText(canth);

                    if (sma.equals("1")) {
                        seleccionHoras = "1";
                    }
                    if (sma.equals("2")) {
                        seleccionHoras = "2";
                    }
                    if (sma.equals("3")) {
                        seleccionHoras = "3";
                    }
                    if (sma.equals("4")) {
                        seleccionHoras = "4";
                    }
                    if (sma.equals("5")) {
                        seleccionHoras = "5";
                    }
                    if (sma.equals("6")) {
                        seleccionHoras = "6";
                    }

                    cbxSemestreMateria.setSelectedItem(seleccionHoras);
                    inhabilitarSeleccion();
                    habilitarSeleccion();
                    txtBuscaMateria.setText("");
                    mensaje = "";

                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(InterfazMateria.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnBuscarMouseClicked

    private void tbMateriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMateriaMouseClicked
        // TODO add your handling code here:
        habilitar();
        inhabilitarSeleccion();
        habilitarSeleccion();
        String seleccionHoras = "";

        int fila = tbMateria.rowAtPoint(evt.getPoint());

        txtClaveMateria.setText(tbMateria.getValueAt(fila, 0).toString());
        txtNombreMateria.setText(tbMateria.getValueAt(fila, 1).toString());
        String mate = tbMateria.getValueAt(fila, 2).toString();

        if (mate.equals("1")) {
            seleccionHoras = "1";
        }
        if (mate.equals("2")) {
            seleccionHoras = "2";
        }
        if (mate.equals("3")) {
            seleccionHoras = "3";
        }
        if (mate.equals("4")) {
            seleccionHoras = "4";
        }
        if (mate.equals("5")) {
            seleccionHoras = "5";
        }
        if (mate.equals("6")) {
            seleccionHoras = "6";
        }

        cbxSemestreMateria.setSelectedItem(seleccionHoras);

        txtHorasSemana.setText(tbMateria.getValueAt(fila, 3).toString());

        materia = Integer.parseInt(txtClaveMateria.getText());
    }//GEN-LAST:event_tbMateriaMouseClicked

    private void txtClaveMateriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClaveMateriaKeyTyped
        // VALIDA  QUE  SE INGRESEN  SOLO NUMEROS  AL CAMPO CLAVE
        char k = evt.getKeyChar();
        if (Character.isLetter(k)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "No se puede ingresar Letras", "Error Datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtClaveMateriaKeyTyped

    private void txtBuscaMateriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaMateriaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaMateriaKeyTyped

    private void txtHorasSemanaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHorasSemanaKeyTyped
        // VALIDA  QUE  SE INGRESEN  SOLO NUMEROS  AL CAMPO HORAS
        char k = evt.getKeyChar();
        if (Character.isLetter(k)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "No se puede ingresar Letras", "Error Datos", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtHorasSemanaKeyTyped

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        String clave = txtClaveMateria.getText();

        int confirmacion = JOptionPane.showConfirmDialog(null, "Seguro deseas eliminar", "Inane warning", JOptionPane.YES_NO_OPTION);

        if (confirmacion == 0) {
            int materiaEncontrada = 0;
            int claveEliminar = Integer.parseInt(clave);
            try {
                //MÉTODO   QUE  VALIDA  SI  UNA MATERIA TIENE   UN  HORARIO  REGISTRADO
                materiaEncontrada = controlMateria.consultarMateriaTieneHorario(claveEliminar);
                inhabilitar();
            } catch (SQLException ex) {
                Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (materiaEncontrada == claveEliminar) {
                JOptionPane.showMessageDialog(rootPane, "LA MATERIA CON CLAVE  " + claveEliminar + " NO SE PUEDE ELIMINAR, TIENE UN HORARIO ASIGNADO", "ERROR", JOptionPane.ERROR_MESSAGE);
                inhabilitar();
            } else {

                modelMateria.setClave(claveEliminar);
                //MÉTODO QUE ELIMINA UNA MATERIA EXISTENTE
                controlMateria.eliminarMateria(modelMateria);
                mostrar("");
                inhabilitar();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JpDetalleMateria;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cbxSemestreMateria;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBuscarNombreMateria;
    private javax.swing.JLabel lbClaveMateria;
    private javax.swing.JLabel lbHorasSemana;
    private javax.swing.JLabel lbNombreMateria;
    private javax.swing.JLabel lbSemestreMateria;
    private javax.swing.JTable tbMateria;
    private javax.swing.JTextField txtBuscaMateria;
    private javax.swing.JTextField txtClaveMateria;
    private javax.swing.JTextField txtHorasSemana;
    private javax.swing.JTextField txtNombreMateria;
    // End of variables declaration//GEN-END:variables
}
