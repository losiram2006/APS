/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import Modelo.EntidadMaestro;
import Controlador.ControlMaestro;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julve
 */
public class InterfazMaestro extends javax.swing.JInternalFrame {

    /**
     * Creates new form CaMaestros
     */
    EntidadMaestro modelMaestro = new EntidadMaestro();

    ControlMaestro controlMaestro = new ControlMaestro();
//    String horas = "";
    String imagen = "";
//    int hora = 0;
//    String fecha = "";
//    int buscar = 0;
    int numEmpleado = 0;

    DefaultTableModel Modelo1;

    public InterfazMaestro() {
        this.setLocation(380, 20);
        this.setTitle("Control de Maestro");
        initComponents();
        mostrarGeneralTabla();
        inhabilitar();
    }

    void limpiar() {
        txtNumeroEmpleado.setText("");
        txtNombre.setText("");
        txtApellidoPaternno.setText("");
        txtApellidoMaterno.setText("");
        cbxHorasAsignadas.setSelectedIndex(0);
    }

    void inhabilitar() {
        txtNumeroEmpleado.setEnabled(true);
        txtNombre.setEnabled(true);
        txtApellidoPaternno.setEnabled(true);
        txtApellidoMaterno.setEnabled(true);
        cbxHorasAsignadas.setEnabled(true);

        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnRegistrar.setEnabled(true);
        btnLimpiar.setEnabled(true);
        btnSalir.setEnabled(true);
        btnRegistrar.setText("Registrar");

        txtNumeroEmpleado.setText("");
        txtNombre.setText("");
        txtApellidoPaternno.setText("");
        txtApellidoMaterno.setText("");
        cbxHorasAsignadas.setSelectedIndex(0);

    }

    void habilitarNuevo() {
        txtNumeroEmpleado.setText("");
        txtNombre.setText("");
        txtApellidoPaternno.setText("");
        txtApellidoMaterno.setText("");
        cbxHorasAsignadas.setSelectedIndex(0);
        btnRegistrar.setEnabled(true);

    }

    void habilitar() {

        txtNumeroEmpleado.setEnabled(true);
        txtNombre.setEnabled(true);
        txtApellidoPaternno.setEnabled(true);
        txtApellidoMaterno.setEnabled(true);
        btnRegistrar.setEnabled(false);
        cbxHorasAsignadas.setEnabled(true);

    }

    void habilitarModificar() {
        txtNombre.setEnabled(true);
        txtApellidoPaternno.setEnabled(true);
        txtApellidoMaterno.setEnabled(true);
        cbxHorasAsignadas.setEnabled(true);
        btnRegistrar.setText("Guardar cambios");
        btnRegistrar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }

    void inhabilitarSeleccion() {
        txtNumeroEmpleado.setEnabled(false);
        txtNombre.setEnabled(false);
        txtApellidoPaternno.setEnabled(false);
        txtApellidoMaterno.setEnabled(false);
        cbxHorasAsignadas.setEnabled(false);

    }

    void habilitarSeleccion() {
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);
    }

    void mostrarEspecificoTabla(int buscar) {
        try {

            Modelo1 = controlMaestro.consultarMaestroTabla(buscar);
            tbMaestro.setModel(Modelo1);

        } catch (SQLException ex) {
            Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void mostrarGeneralTabla() {
        try {

            Modelo1 = controlMaestro.consultarGeneralMaestroTabla();
            tbMaestro.setModel(Modelo1);

        } catch (SQLException ex) {
            Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

//    public boolean validar(String cadena) {
//        int n;
//        try {
//            n = Integer.parseInt(cadena);
//            return true;
//
//        } catch (Exception e) {
//            return false;
//        }
//
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JpMantenimientoMaestro = new javax.swing.JPanel();
        JpDatosMaestro = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbNumeroEmpleado = new javax.swing.JLabel();
        txtNumeroEmpleado = new javax.swing.JTextField();
        lbnombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lbApellidoPaterno = new javax.swing.JLabel();
        lbApellidoMaterno = new javax.swing.JLabel();
        txtApellidoPaternno = new javax.swing.JTextField();
        txtApellidoMaterno = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lbHorasAsignadas = new javax.swing.JLabel();
        cbxHorasAsignadas = new javax.swing.JComboBox<>();
        JpOpciones = new javax.swing.JPanel();
        btnRegistrar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        JpConsulta = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMaestro = new javax.swing.JTable();
        lbNombreBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setForeground(new java.awt.Color(255, 255, 255));
        setIconifiable(true);

        JpMantenimientoMaestro.setBackground(new java.awt.Color(204, 204, 255));
        JpMantenimientoMaestro.setBorder(new javax.swing.border.MatteBorder(null));

        JpDatosMaestro.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Datos del Maestro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bodoni MT", 1, 18))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbNumeroEmpleado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbNumeroEmpleado.setText("NÃºmero de Empleado:");

        txtNumeroEmpleado.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        txtNumeroEmpleado.setToolTipText("Escribe numero de Empleado");
        txtNumeroEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroEmpleadoKeyTyped(evt);
            }
        });

        lbnombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbnombre.setText("Nombre:");

        txtNombre.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        txtNombre.setToolTipText("Escribe el nombre del maestro");

        lbApellidoPaterno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbApellidoPaterno.setText("Apellido Paterno:");

        lbApellidoMaterno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbApellidoMaterno.setText("Apellido Materno:");

        txtApellidoPaternno.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        txtApellidoPaternno.setToolTipText("Escribe apellido paterno");

        txtApellidoMaterno.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        txtApellidoMaterno.setToolTipText("Escribe Apellido Materno");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lbNumeroEmpleado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNumeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbApellidoPaterno)
                            .addComponent(lbApellidoMaterno)
                            .addComponent(lbnombre))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre)
                            .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtApellidoPaternno))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNumeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidoPaternno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbHorasAsignadas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbHorasAsignadas.setText("Horas Asignadas:");

        cbxHorasAsignadas.setFont(new java.awt.Font("Bodoni MT", 0, 18)); // NOI18N
        cbxHorasAsignadas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione horas", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40" }));
        cbxHorasAsignadas.setToolTipText("Ingrese horas asignadas al Maestro a la semana");
        cbxHorasAsignadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxHorasAsignadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbHorasAsignadas)
                    .addComponent(cbxHorasAsignadas, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbHorasAsignadas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxHorasAsignadas, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout JpDatosMaestroLayout = new javax.swing.GroupLayout(JpDatosMaestro);
        JpDatosMaestro.setLayout(JpDatosMaestroLayout);
        JpDatosMaestroLayout.setHorizontalGroup(
            JpDatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpDatosMaestroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        JpDatosMaestroLayout.setVerticalGroup(
            JpDatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpDatosMaestroLayout.createSequentialGroup()
                .addGroup(JpDatosMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JpOpciones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 255), null, null));

        btnRegistrar.setBackground(new java.awt.Color(102, 102, 102));
        btnRegistrar.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/aceptar-o-no-la-correcta-seleccione-aceptar-verde-si-icono-9162-32.png"))); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistrar.setIconTextGap(5);
        btnRegistrar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnRegistrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseEntered(evt);
            }
        });
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(102, 102, 102));
        btnSalir.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(102, 102, 102));
        btnModificar.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/signatura-icono-8756-32.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(102, 102, 102));
        btnEliminar.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cuadrados-eliminar-icono-7310-32.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(102, 102, 102));
        btnLimpiar.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar-cancelar-icono-4935-32.png"))); // NOI18N
        btnLimpiar.setText("Cancelar");
        btnLimpiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLimpiar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnLimpiar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout JpOpcionesLayout = new javax.swing.GroupLayout(JpOpciones);
        JpOpciones.setLayout(JpOpcionesLayout);
        JpOpcionesLayout.setHorizontalGroup(
            JpOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        JpOpcionesLayout.setVerticalGroup(
            JpOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JpConsulta.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Consulta Maestros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bodoni MT", 1, 18))); // NOI18N

        tbMaestro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbMaestro.setToolTipText("Lista de Maestros Registrados");
        tbMaestro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMaestroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMaestro);

        lbNombreBuscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbNombreBuscar.setText("NÃºmero de Empleado:");

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(102, 102, 102));
        btnBuscar.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa-icono-3813-32.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JpConsultaLayout = new javax.swing.GroupLayout(JpConsulta);
        JpConsulta.setLayout(JpConsultaLayout);
        JpConsultaLayout.setHorizontalGroup(
            JpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(JpConsultaLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lbNombreBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        JpConsultaLayout.setVerticalGroup(
            JpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JpConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNombreBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout JpMantenimientoMaestroLayout = new javax.swing.GroupLayout(JpMantenimientoMaestro);
        JpMantenimientoMaestro.setLayout(JpMantenimientoMaestroLayout);
        JpMantenimientoMaestroLayout.setHorizontalGroup(
            JpMantenimientoMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpMantenimientoMaestroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpMantenimientoMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JpConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JpOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JpDatosMaestro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        JpMantenimientoMaestroLayout.setVerticalGroup(
            JpMantenimientoMaestroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpMantenimientoMaestroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JpDatosMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JpOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JpConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JpMantenimientoMaestro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JpMantenimientoMaestro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);

    }//GEN-LAST:event_btnSalirActionPerformed
//PB13: HU07 Como subdirector quiero poder dar de alta a los maestros
    private void btnRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseClicked

        ImageIcon icon = new ImageIcon(imagen);
        String cadena = btnRegistrar.getText();
        String numero = txtNumeroEmpleado.getText();
        String nombre = txtNombre.getText();
        String apellidoPaterno = txtApellidoPaternno.getText();
        String apellidoMaterno = txtApellidoMaterno.getText();
        int horasSeleccionadas = cbxHorasAsignadas.getSelectedIndex();

        if (cadena.equalsIgnoreCase("Registrar")) {
            // C03: CODIGO QUE VALIDAN  CAMPOS  VACÃOS
            if (numero.equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese numero de empleado");
            }
            //C03: CODIGO QUE VALIDAN  CAMPOS  VACÃOS
            if (nombre.equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Nombre del Maestro");
            }
            //C03:CODIGO QUE VALIDAN  CAMPOS  VACÃOS
            if (apellidoPaterno.equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Apellido Paterno");
            }
            //C03:CODIGO QUE VALIDAN  CAMPOS  VACÃOS
            if (apellidoMaterno.equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese apellido Materno");
            }
            //C03:CODIGO QUE VALIDAN  CAMPOS  NO SELECCIONADO
            if (cbxHorasAsignadas.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Seleccione las Horas Asignadas");
            } else {
                int numeroEmpleado = Integer.parseInt(numero);
                //SE  AGREGAN LOS  DATOS A LA ENTIDAD MAESTRO
                modelMaestro.setNumeroEmpleado(numeroEmpleado);
                modelMaestro.setNombre(nombre);
                modelMaestro.setApePaterno(apellidoPaterno);
                modelMaestro.setApeMaterno(apellidoMaterno);
                modelMaestro.setHorasAsignadas(horasSeleccionadas);

//                 C01:MÃTODO  QUE REGISTRA  UN NUEVO MAESTRO
                controlMaestro.registrarMaestro(modelMaestro);
                mostrarGeneralTabla();
                inhabilitar();

            }
        }
//      PBI3 :HU08 Como subdirector poder modificar a los maestros registrados
        if (cadena.equalsIgnoreCase("Guardar cambios")) {
            if (numero.equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese numero de empleado");
            }
            //C03:CODIGO QUE VALIDAN  CAMPOS  VACÃOS
            if (nombre.equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Nombre del Maestro");
            }
            //C03:CODIGO QUE VALIDAN  CAMPOS  VACÃOS
            if (apellidoPaterno.equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Apellido Paterno");
            }
            //C03:CODIGO QUE VALIDAN  CAMPOS  VACÃOS
            if (apellidoMaterno.equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese apellido Materno");
            }
            //C03:CODIGO QUE VALIDAN  CAMPOS  NO  SELECCIONADO
            if (cbxHorasAsignadas.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Seleccione las Horas Asignadas");
            } else {
                //VARIABLE  QUE  GUARDA UN MAESTRO SI  ESTE  SE  ENCUENTRA EN LA TABLA HORARIO
                int maestroEncontrado = 0;

                int numeroEmpleado = Integer.parseInt(numero);
                try {
                    //MÃTODO   QUE  VALIDA  SI  UN  MAESTRO TIENE  UN  HORARIO  REGISTRADO
                    maestroEncontrado = controlMaestro.consultarMaestroTieneHorario(numeroEmpleado);
                } catch (SQLException ex) {
                    Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
                }
//                System.out.println("maestroEncontrado" + maestroEncontrado);
//                System.out.println("maestroEncontrado" + maestroEncontrado);

                if (maestroEncontrado == numeroEmpleado) {
                    JOptionPane.showMessageDialog(rootPane, "MAESTRO(A) " + nombre + " NO SE PUEDE MODIFICAR, TIENE UN HORARIO ASIGNADO", "ERROR", JOptionPane.ERROR_MESSAGE);
                    inhabilitar();
                } else {
//                int numeroEmpleado = Integer.parseInt(numero);
//                modelMaestro.setNumeroEmpleado(numeroEmpleado);
                    modelMaestro.setNombre(nombre);
                    modelMaestro.setApePaterno(apellidoPaterno);
                    modelMaestro.setApeMaterno(apellidoMaterno);
                    modelMaestro.setHorasAsignadas(horasSeleccionadas);
//                    System.out.println("numEmpleado" + numeroEmpleado);
// C01:MÃTODO   QUE  MODIFICA  UN MAESTRO  EXISTENTE
                    controlMaestro.modificarMaestro(modelMaestro, numeroEmpleado);

//     se vizualiza la informaciÃ³n de registros nuevos  y los  existentes en tabla
                    mostrarGeneralTabla();
//                activa y  desactiva botones y  caja d e texto
                    inhabilitar();
                }

            }
        }
    }//GEN-LAST:event_btnRegistrarMouseClicked

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked

        String numE;
        String nom;
        String aP;
        String aM;
        String fI;
        String hA;
        String mensaj[] = null;
        String seleccionHoras = "";

        String numbuscar = txtBuscar.getText();
//        VALIDA CAMPO VACÃO 
        if (numbuscar.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Campo vacio ingrese maestro a Buscar", "Inane warning", JOptionPane.WARNING_MESSAGE);

        } else {

            try {
                int numeroEmpleado = Integer.parseInt(numbuscar);
//C02:MÃTODO  QUE BUSCA  UN MAESTRO POR NUMERO DE EMPLEADO 
                String mensaje = controlMaestro.consultarMaestroEspecifico(numeroEmpleado);
                if (mensaje.equalsIgnoreCase("")) {

                    JOptionPane.showMessageDialog(null, "El Maestro no se encuentra registrado", "Inane warning", JOptionPane.WARNING_MESSAGE);
                    txtBuscar.setText("");
                    mostrarGeneralTabla();

                } else {
//                    System.out.println("mensaje" + mensaje);
//    PARTE  LA CADENA  EN PARTES PARA ENVIARLO A CAJAS  DE  TEXTO
                    mensaj = mensaje.split("-");
                    numE = mensaj[0].trim();
                    nom = mensaj[1].trim();
                    aP = mensaj[1].trim();
                    aM = mensaj[2].trim();
                    hA = mensaj[4].trim();

                    txtNumeroEmpleado.setText(numE);
                    txtNombre.setText(nom);
                    txtApellidoPaternno.setText(aP);
                    txtApellidoMaterno.setText(aM);

                    cbxHorasAsignadas.setSelectedItem(hA);
                    inhabilitarSeleccion();
                    habilitarSeleccion();
                    txtBuscar.setText("");

                }
            } catch (SQLException ex) {
                Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_btnBuscarMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        // TODO add your handling code here:
        char k = evt.getKeyChar();
        if (Character.isLetter(k)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "No se puede ingresar Letras", "Error Datos", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_txtBuscarKeyTyped
    }
    private void tbMaestroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMaestroMouseClicked
        // TODO add your handling code here:
        habilitar();
        inhabilitarSeleccion();
        habilitarSeleccion();
        int fila = tbMaestro.rowAtPoint(evt.getPoint());

        if (fila >= 0) {

            txtNumeroEmpleado.setText(tbMaestro.getValueAt(fila, 0).toString());
            txtNombre.setText(tbMaestro.getValueAt(fila, 1).toString());
            txtApellidoPaternno.setText(tbMaestro.getValueAt(fila, 2).toString());
            txtApellidoMaterno.setText(tbMaestro.getValueAt(fila, 3).toString());
            cbxHorasAsignadas.setSelectedItem(tbMaestro.getValueAt(fila, 4).toString());

        } else {
            JOptionPane.showMessageDialog(null, "no seleciono fila");
        }

    }//GEN-LAST:event_tbMaestroMouseClicked

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        // TODO add your handling code here:
        habilitarModificar();

    }//GEN-LAST:event_btnModificarMouseClicked

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        // TODO add your handling code here:
        inhabilitar();

    }//GEN-LAST:event_btnLimpiarMouseClicked

    private void btnRegistrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarMouseEntered
//PBI3: HU09 Como subdirector quiero poder dar de baja a los maestros registrados
    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked

//        String numEmpleado = txtNumeroEmpleado.getText();
//        int confirmacion = JOptionPane.showConfirmDialog(null, "Seguro deseas eliminar", "Inane warning", JOptionPane.YES_NO_OPTION);
//
//        if (txtNumeroEmpleado.equals("")&& txtNombre.equals("")&& txtApellidoPaternno.equals("")&&txtApellidoMaterno.equals("") ) {
//           JOptionPane.showMessageDialog(null, "No tienes  datos a Eliminar");
//            }else
//            
//            if (confirmacion == 0) {
//
//                int maestroEncontrado = 0;
//                int empleado = Integer.parseInt(numEmpleado);
//                try {
//                    //C02:MÃTODO   QUE  VALIDA  SI  UN  MAESTRO TIENE  UN  HORARIO  REGISTRADO
//                    maestroEncontrado = controlMaestro.consultarMaestroTieneHorario(empleado);
//                    inhabilitar();
//                } catch (SQLException ex) {
//                    Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
//                }
////                System.out.println("maestroEncontrado" + maestroEncontrado);
//
//                if (maestroEncontrado == empleado) {
//                    JOptionPane.showMessageDialog(rootPane, "MAESTRO(A) " + empleado + " NO SE PUEDE ELIMINAR, TIENE UN HORARIO ASIGNADO", "ERROR", JOptionPane.ERROR_MESSAGE);
//                    inhabilitar();
//                } else {
//                    modelMaestro.setNumeroEmpleado(empleado);
//                    //C01:MÃTODO  QUE  ELIMINA UN REGISTRO EXISTENTE EN MAESTRO
//                    controlMaestro.eliminarMaestro(modelMaestro);
////                MUESTRA DATOS EN LA TABLA
//                    mostrarGeneralTabla();
////                HABILITA  BOTONES 
//                    inhabilitar();
//
//                }
//            
//        }

    }//GEN-LAST:event_btnEliminarMouseClicked

    private void txtNumeroEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroEmpleadoKeyTyped
//     C04: Debe validar ingreso de letras y nÃºmeros en los  campos numero empleado
        char k = evt.getKeyChar();
        if (Character.isLetter(k)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "No se puede ingresar Letras", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtNumeroEmpleadoKeyTyped

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModificarActionPerformed

    private void cbxHorasAsignadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxHorasAsignadasActionPerformed
        // TODO add your handling code here:
        cbxHorasAsignadas.requestFocus();
    }//GEN-LAST:event_cbxHorasAsignadasActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
         String numEmpleado = txtNumeroEmpleado.getText();
        int confirmacion = JOptionPane.showConfirmDialog(null, "Seguro deseas eliminar", "Inane warning", JOptionPane.YES_NO_OPTION);
//
//        if (txtNumeroEmpleado.equals("")&& txtNombre.equals("")&& txtApellidoPaternno.equals("")&&txtApellidoMaterno.equals("") ) {
//           JOptionPane.showMessageDialog(null, "No tienes  datos a Eliminar");
//            }else
            
            if (confirmacion == 0) {

                int maestroEncontrado = 0;
                int empleado = Integer.parseInt(numEmpleado);
                try {
                    //C02:MÃTODO   QUE  VALIDA  SI  UN  MAESTRO TIENE  UN  HORARIO  REGISTRADO
                    maestroEncontrado = controlMaestro.consultarMaestroTieneHorario(empleado);
                    inhabilitar();
                } catch (SQLException ex) {
                    Logger.getLogger(InterfazMaestro.class.getName()).log(Level.SEVERE, null, ex);
                }
//                System.out.println("maestroEncontrado" + maestroEncontrado);
//                System.out.println("maestroEncontrado" + maestroEncontrado);

                if (maestroEncontrado == empleado) {
                    JOptionPane.showMessageDialog(rootPane, "MAESTRO(A) " + empleado + " NO SE PUEDE ELIMINAR, TIENE UN HORARIO ASIGNADO", "ERROR", JOptionPane.ERROR_MESSAGE);
                    inhabilitar();
                } else {
                    modelMaestro.setNumeroEmpleado(empleado);
                    //C01:MÃTODO  QUE  ELIMINA UN REGISTRO EXISTENTE EN MAESTRO
                    controlMaestro.eliminarMaestro(modelMaestro);
//                MUESTRA DATOS EN LA TABLA
                    mostrarGeneralTabla();
//                HABILITA  BOTONES 
                    inhabilitar();

                }
            
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JpConsulta;
    private javax.swing.JPanel JpDatosMaestro;
    private javax.swing.JPanel JpMantenimientoMaestro;
    private javax.swing.JPanel JpOpciones;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cbxHorasAsignadas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbApellidoMaterno;
    private javax.swing.JLabel lbApellidoPaterno;
    private javax.swing.JLabel lbHorasAsignadas;
    private javax.swing.JLabel lbNombreBuscar;
    private javax.swing.JLabel lbNumeroEmpleado;
    private javax.swing.JLabel lbnombre;
    private javax.swing.JTable tbMaestro;
    private javax.swing.JTextField txtApellidoMaterno;
    private javax.swing.JTextField txtApellidoPaternno;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroEmpleado;
    // End of variables declaration//GEN-END:variables
}
